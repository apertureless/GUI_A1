/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.ws.prak.auf4;

import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author NetGhost03
 */
public class Komponenten extends javax.swing.JPanel {
    
    private static final int MIN_LAGERDAUER = 1;
    private static final int MAX_LAGERDAUER = 25;
    
    private static final int AKTUELLES_JAHR = Calendar.getInstance().get(Calendar.YEAR);
    
    private static final int MIN_JAHRGANG = AKTUELLES_JAHR - MAX_LAGERDAUER;
    private static final int MAX_JAHRGANG = AKTUELLES_JAHR;

    private static final String MSG_ERR_FORMAT = "Fehler\n Falsches Format!";
    
    private static final String MSG_ERR_BEREICH_1 = "Der Jahrgang muss zwischen dem Jahr " + MIN_JAHRGANG + " und " + MAX_JAHRGANG + " liegen";
    private static final String MSG_ERR_BEREICH_2 = "Der Jahrgang liegt in der Zukunft. Das ist nicht möglich.";
    private static final String MSG_ERR_KURZ = "Lagerdauer zu kurz.";
    
    private static final String MSG_INFO_LAGER = "Lagerdauer (%d - %d): ";
    private static final String MSG_INFO_JAHRGANG = "Jahrgang (%d - %d): ";
    
    double jahrgang;
    int lagerdauer = 0;
    
    boolean isValid = true;
    
    Lagergut lg = new Wein();
   
    
    
    /**
     * Creates new form Komponenten
     */
    public Komponenten() {
        initComponents();
        
        NumberFormat nf = NumberFormat.getInstance();
        
        NumberFormatter nform = new NumberFormatter(nf);
        DefaultFormatterFactory dff = new DefaultFormatterFactory(nform);
        nf.setMinimumFractionDigits(0);
        nf.setMaximumFractionDigits(0);
        nf.setGroupingUsed(false);
        nform.setAllowsInvalid(false);
        nform.setOverwriteMode(true);
       
        nform.setValueClass(Integer.class);
        nform.setMinimum(0);
        nform.setMaximum(9999);

        jFTJahrgang.setFormatterFactory(dff);
       
  
    }
    
//    public Diagramm getDiagramm(){
//        return this.diagramm;
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        diagramm1 = new gui.ws.prak.auf4.Diagramm();
        jFTJahrgang = new javax.swing.JFormattedTextField();
        jLJahrgang = new javax.swing.JLabel();
        jLLagerdauer = new javax.swing.JLabel();
        jSLagerdauer = new javax.swing.JSpinner();

        javax.swing.GroupLayout diagramm1Layout = new javax.swing.GroupLayout(diagramm1);
        diagramm1.setLayout(diagramm1Layout);
        diagramm1Layout.setHorizontalGroup(
            diagramm1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );
        diagramm1Layout.setVerticalGroup(
            diagramm1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 228, Short.MAX_VALUE)
        );

        jFTJahrgang.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFTJahrgang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFTJahrgangFocusLost(evt);
            }
        });
        jFTJahrgang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTJahrgangActionPerformed(evt);
            }
        });

        jLJahrgang.setLabelFor(jFTJahrgang);
        jLJahrgang.setText("Jahrgang");

        jLLagerdauer.setText("Lagerdauer");

        jSLagerdauer.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSLagerdauerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLJahrgang)
                    .addComponent(jLLagerdauer))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jFTJahrgang)
                    .addComponent(jSLagerdauer, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addComponent(diagramm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFTJahrgang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLJahrgang))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLLagerdauer)
                            .addComponent(jSLagerdauer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(diagramm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Methode die Aufgerufen wird, wenn Werte im Jahrgang Feld geändert werden.
     * 
     * @param evt 
     */
    private void jFTJahrgangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTJahrgangActionPerformed

        EingabeCheckJahrgang();
        if(isValid) {
            SetSpinnerValues();
            SetDiagrammValues();
        }
     
    }//GEN-LAST:event_jFTJahrgangActionPerformed

    private void jFTJahrgangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFTJahrgangFocusLost
        EingabeCheckJahrgang();
        if(isValid) {
            SetSpinnerValues(); 
            SetDiagrammValues();
        }
    
    }//GEN-LAST:event_jFTJahrgangFocusLost

    private void jSLagerdauerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSLagerdauerStateChanged

        lagerdauer = (int)jSLagerdauer.getValue() - (int)jahrgang;
        SetDiagrammValues();
    }//GEN-LAST:event_jSLagerdauerStateChanged
    
    /**
     * Überprüft die Eingabe des Jahrganges.
     */
    private void EingabeCheckJahrgang() {
        NumberFormat nf;
        double jahrgangEingabe = 0;
        isValid = true;
        
        try {
            nf = NumberFormat.getInstance();
            jahrgangEingabe = (nf.parse(jFTJahrgang.getText()).doubleValue());
            
        } catch (ParseException e) {
            
            JOptionPane.showMessageDialog(this, MSG_ERR_FORMAT, "Fehler", JOptionPane.WARNING_MESSAGE);
            jFTJahrgang.requestFocusInWindow();
            jFTJahrgang.selectAll();
            isValid = false;
        }
        
        try {
            if (jahrgangEingabe < MIN_JAHRGANG) {
                JOptionPane.showMessageDialog(this, MSG_ERR_BEREICH_1, "Fehler", JOptionPane.WARNING_MESSAGE);
                jFTJahrgang.requestFocusInWindow();
                jFTJahrgang.selectAll();
                isValid = false;
            }
            
            if (jahrgangEingabe > MAX_JAHRGANG) {
                    JOptionPane.showMessageDialog(this, MSG_ERR_BEREICH_2, "Fehler", JOptionPane.WARNING_MESSAGE);
                    jFTJahrgang.requestFocusInWindow();
                    jFTJahrgang.selectAll();
                    isValid = false;
            }
            
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, MSG_ERR_FORMAT, "Fehler", JOptionPane.WARNING_MESSAGE);
            isValid = false;
        }
        
        jahrgang = jahrgangEingabe;
    }
    
    private void SetSpinnerValues() {
        int value = (int)jahrgang + 1;
        int min = value;
        int max = value + MAX_LAGERDAUER;
        int step = 1;
        
        SpinnerNumberModel lagerModel = new SpinnerNumberModel(value, min, max, step);
        JSpinner.NumberEditor ed = new JSpinner.NumberEditor(jSLagerdauer);
        ed.getFormat().setGroupingUsed(false);
        
     
        //jSLagerdauer.setEditor(ed);
        jSLagerdauer.setModel(lagerModel);
        jSLagerdauer.setEditor(new JSpinner.NumberEditor(jSLagerdauer,"####"));

        jSLagerdauer.requestFocusInWindow();
        
        lagerdauer = value - (int)jahrgang;
    }
    
    private void SetDiagrammValues() {
        
        lg.setJahr((int)jahrgang);
        lg.setDauer((int)lagerdauer);

        diagramm1.setJahrgangUndDauer(lg);
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.ws.prak.auf4.Diagramm diagramm1;
    private javax.swing.JFormattedTextField jFTJahrgang;
    private javax.swing.JLabel jLJahrgang;
    private javax.swing.JLabel jLLagerdauer;
    private javax.swing.JSpinner jSLagerdauer;
    // End of variables declaration//GEN-END:variables


  
}
